/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

MainScreenViewBase::MainScreenViewBase() :
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
{

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));

    containerTemperature.setPosition(12, 55, 105, 155);

    buttonWithIconTemp.setXY(0, 0);
    buttonWithIconTemp.setBitmaps(touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_ICON_TEMPERATURE_ID), touchgfx::Bitmap(BITMAP_ICON_TEMPERATURE_ID));
    buttonWithIconTemp.setIconXY(36, 61);
    containerTemperature.add(buttonWithIconTemp);

    textAreaTempLabel.setXY(38, 5);
    textAreaTempLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaTempLabel.setLinespacing(0);
    textAreaTempLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
    containerTemperature.add(textAreaTempLabel);

    textAreaTempValue.setXY(34, 115);
    textAreaTempValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaTempValue.setLinespacing(0);
    Unicode::snprintf(textAreaTempValueBuffer, TEXTAREATEMPVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3).getText());
    textAreaTempValue.setWildcard(textAreaTempValueBuffer);
    textAreaTempValue.resizeToCurrentText();
    textAreaTempValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
    containerTemperature.add(textAreaTempValue);

    containerHumidity.setPosition(129, 55, 105, 155);

    buttonWithIconHum.setXY(0, 0);
    buttonWithIconHum.setBitmaps(touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_ICON_HUMIDITY_ID), touchgfx::Bitmap(BITMAP_ICON_HUMIDITY_ID));
    buttonWithIconHum.setIconXY(36, 61);
    containerHumidity.add(buttonWithIconHum);

    textAreaHumLabel.setXY(38, 5);
    textAreaHumLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaHumLabel.setLinespacing(0);
    textAreaHumLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
    containerHumidity.add(textAreaHumLabel);

    textAreaHumValue.setXY(33, 115);
    textAreaHumValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaHumValue.setLinespacing(0);
    Unicode::snprintf(textAreaHumValueBuffer, TEXTAREAHUMVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
    textAreaHumValue.setWildcard(textAreaHumValueBuffer);
    textAreaHumValue.resizeToCurrentText();
    textAreaHumValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
    containerHumidity.add(textAreaHumValue);

    containerLight.setPosition(247, 55, 105, 155);

    buttonWithIconLight.setXY(0, 0);
    buttonWithIconLight.setBitmaps(touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_ICON_LIGHT_ID), touchgfx::Bitmap(BITMAP_ICON_LIGHT_ID));
    buttonWithIconLight.setIconXY(36, 61);
    containerLight.add(buttonWithIconLight);

    textAreaLightLabel.setXY(38, 5);
    textAreaLightLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaLightLabel.setLinespacing(0);
    textAreaLightLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
    containerLight.add(textAreaLightLabel);

    textAreaLightValue.setXY(25, 115);
    textAreaLightValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaLightValue.setLinespacing(0);
    Unicode::snprintf(textAreaLightValueBuffer, TEXTAREALIGHTVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    textAreaLightValue.setWildcard(textAreaLightValueBuffer);
    textAreaLightValue.resizeToCurrentText();
    textAreaLightValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
    containerLight.add(textAreaLightValue);

    containerLamp.setPosition(364, 55, 105, 155);

    buttonWithIconLamp.setXY(0, 0);
    buttonWithIconLamp.setBitmaps(touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_BG_TAB_PAGE_ID), touchgfx::Bitmap(BITMAP_ICON_LAMP_ID), touchgfx::Bitmap(BITMAP_ICON_LAMP_ID));
    buttonWithIconLamp.setIconXY(36, 61);
    buttonWithIconLamp.setAction(buttonCallback);
    containerLamp.add(buttonWithIconLamp);

    textAreaLampLabel.setXY(38, 5);
    textAreaLampLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaLampLabel.setLinespacing(0);
    textAreaLampLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
    containerLamp.add(textAreaLampLabel);

    textAreaLampValue.setXY(13, 115);
    textAreaLampValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaLampValue.setLinespacing(0);
    textAreaLampValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
    containerLamp.add(textAreaLampValue);

    image1.setXY(203, 15);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_MSRTOS_LOGO_ID));

    add(background);
    add(containerTemperature);
    add(containerHumidity);
    add(containerLight);
    add(containerLamp);
    add(image1);
}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithIconLamp)
    {
        //Interaction1
        //When buttonWithIconLamp clicked change screen to LightControlScreen
        //Go to LightControlScreen with screen transition towards East
        application().gotoLightControlScreenScreenSlideTransitionEast();
    }
}
